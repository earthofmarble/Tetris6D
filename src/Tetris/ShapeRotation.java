package Tetris;

public enum ShapeRotation {         //положение фигуры

    HORISONTAL (0),
    VERTICAL (1),
    HORISONTALINVERTED (2),
    VERTICALINVERTED (3);


    int pos;
    ShapeRotation(int pos){
        this.pos=pos;
    }


    /**
     *
     * спустя 4 часа попыток придумать собственный способ, я решил погуглить, как вращать фигуры, и по первой ссылке нашел статью ротейшн матрикс на википедии
     * изучил, стало понятно следующее
     *
     * !!!!! ПОПРАВОЧКА: "НАША МАТРИЦА ПРАВОСТОРОННЯЯ, У НАС ЖЕ ИКС ВНИЗ А ИГРИК ВПРАВО, ЕСЛИ ЕЕ ПЕРЕВЕРНУТь, ТО ПОЛУЧАЕТСЯ ПРАВОСТОРОННЯЯ, ДАЛЬШЕ ВСЕ НАОБОРОТ)
     *
     * в нашем случае (у стемится вниз, х вправо) наша система координат считается лефтхэндед(левосторонней), если бы у вверх и тд..... тогда была бы нормальная правосторонняя
     * так вот
     * в нашем случае, новые координаты находим так:
     *
     * вращаются все эти точки вокруг 0,0 , значит
     * записываем в новый объект, назовем ОБЪЕКТ, координаты головной точки(вокруг которой будем вращать)
     * отнимаем от всех наших точек координаты ОБЪЕКТа
     *
     * и находим новые координаты:
     * Хновый = Хстарый*косинус90градусов -/+ Устарый*синус90градусов
     * Уновый = +/-Хстарый*синус90градусов + Устарый*косинус90градусов
     *
     * для нашей ситуации, когда (система координат левосторонняя,вращаем по часовой стрелке)  и для ситуаций когда (правосторонняя, вращаем против часовой стрелки) используем первые знаки
     * для ситуаций (левосторонняя, против часовой) и (правосторонняя, по часовой) используем вторые знаки
     *
     *
     * косинус90 = 0;
     * синус90 = 1
     *
     * вот в общем-то и вся математика
     *
     * осталось только написать все это :)))) :(
     * */


    public void flip(){
        if (this.pos==3){
            this.pos=0;
        } else {
            this.pos++;
        }
    }

}
